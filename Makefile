.PHONY: test run morbo build format deps install-deps generate-dbic watch-perl\
	watch doc migrate-db watch-test test-data

run: build morbo ## Default. Build and run under morbo

morbo: ## Run under morbo, listening on :5001
	@carton exec -- morbo -v bin/app -l http://\*:5001

build: local ## Install deps (TODO: and build docs)

local: cpanfile.snapshot ## Install perl dependencies
# '--deployment' installs the same dep versions that are in the lockfile
	@carton install --deployment && touch local

test-data:
	@conch api get /device/E329229X8701126 > t/_assets/conch-device-server.json
	@conch api get /device/E329229X8701126 > t/_assets/conch-device-server.json
	@conch api get /device/SSJ18129187 > t/_assets/conch-device-switch.json

test: local test-data ## Run tests
	@carton exec prove -lpr t/

# Exclude Schema files generated by dbicdump
format: ## Run perltidy
	@find lib \
		-o -name "*.pm" -not -name "Schema*" -type f -exec perltidy {} +
	@find lib -name "*.bak" -delete
	@find t -name "*.t"  -type f -exec perltidy {} +
	@find t -name "*.bak" -delete

watch-test:
	@find lib t | entr -r -c make test

generate-dbic: dbic

.PHONY: dbic
dbic: ## Regenerate DBIC schemas
	@carton exec bin/dbic_update.pl

migrate-db: ## Apply database migrations
	@sqitch deploy

.PHONY: help
help: ## Display this help message
	@echo "GNU make(1) targets:"
	@grep -E '^[a-zA-Z_.-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-15s\033[0m %s\n", $$1, $$2}'

